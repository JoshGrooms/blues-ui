@import "ui-variables";

.text(error)
{
     color:         @text-color-error;
    text-shadow:    none;
}
.text(highlight)
{
    font-weight:    bold;
    color:          @text-color-highlighted;
}
.text(info)
{
    color:          @text-color-info;
    text-shadow:    none;
}
.text(normal)
{
    color:          @text-color;
    font-weight:    normal;
    text-shadow:    none;
}
.text(selected)
{
    color:          @text-color-selected;
    font-weight:    bold;
}
.text(success)
{
    color:          @text-color-success;
    text-shadow:    none;
}

.text(subtle)
{
    color:          @text-color-dim;
    font-weight:    normal;
    text-shadow:    none;
}
.text(warning)
{
    color:          @text-color-warning;
    text-shadow:    none;
}


.heading(primary)
{
    color:          @text-heading-color-primary;
    font-size:      2em;
    font-weight:    bold;
    font-style:     normal;
}
.heading(secondary)
{
    color:          @text-heading-color-secondary;
    font-size:      1.75em;
    font-weight:    bold;
    font-style:     normal;
}
.heading(tertiary)
{
    color:          @text-heading-color-tertiary;
    font-size:      1.5em;
    font-weight:    bold;
    font-style:     normal;
}
.heading(quaternary)
{
    color:          @text-heading-color-quaternary;
    font-size:      1.25em;
    font-weight:    normal;
    font-style:     normal;
}

.debug()
{
    border:             1px solid @red;
    background-color:   @blue;
    background-image:   none;
    color:              @green;
}

.deep-inset()
{
    .bevel(inset);
    background-color:   @inset-color-dark;
    box-shadow:         inset 10px 10px 10px -10px fade(@shadow-color, 50%);
}

.flat()
{
    background-color:   transparent;
    background-image:   none;
    border:             none;
    box-shadow:         none;
}

.flat-list()
{
    .base-list-item();
    ol
    {
        .flat();
        border-radius: 0em;
    }
}

.base-list-item()
{
    li
    {
        .flat();
        &.selected
        {
            .text(highlight);
            background-image:       @vibrant-blue-gradient;
            &:before                { display: none; }
            &.list-nested-item
            {
                background-image:   none;
                li                  { .text(subtle); }
            }
        }
    }

    ._list-class-color(error);
    ._list-class-color(info);
    ._list-class-color(subtle);
    ._list-class-color(success);
    ._list-class-color(warning);
}

.tree-list()
{
    .flat-list();
    li.selected:before
    {
        display:                    inherit;
        background-image:           @vibrant-blue-gradient;
    }
}

.inset-list-item()
{
    .base-list-item();
    li { padding: 1em; }
}

.inset-list()
{
    .inset-list-item();
    ol
    {
        .deep-inset();
        border-radius:              0.25em;
    }

}

.shallow-inset()
{
    .bevel(inset);

    background-color:               @inset-color;
    box-shadow:                     inset 1px 2px 3px fade(@black, 37.5%);
}
.shallow-outset()
{
    .bevel(outset);

    background-color:               @menu-color;
    box-shadow:                     3px 3px 5px fade(@black, 25%),
                                    -1px -1px 1px fade(lighten(@black, 14.29%), 87.5%);
}


._list-class-color(@class)
{
    li:not(.list-nested-item).text-@{class},
    li.list-nested-item.text-@{class} > .list-item
    {
        .text(@class);
    }
}





._bevel(inset)      { background-clip: padding-box; }
._bevel(outset)     { background-clip: border-box; }
._bevel(@size; @topLeft; @bottomRight)
{
    border:                 @size solid @topLeft;
    border-bottom-color:    @bottomRight;
    border-right-color:     @bottomRight;
}


.bevel(inset; @size: 1px; @topLeft: @shadow-color-lighter; @bottomRight: @gloss-color)
{
    ._bevel(inset);
    ._bevel(@size, @topLeft, @bottomRight);
}

.bevel(outset; @size: 1px; @topLeft: @gloss-color; @bottomRight: @shadow-color-lighter)
{
    ._bevel(outset);
    ._bevel(@size, @topLeft, @bottomRight);
}





.gradient(@topColor; @bottomColor; @direction: horizontal)
{
    background-image: -webkit-linear-gradient(@topColor, @bottomColor)
}
